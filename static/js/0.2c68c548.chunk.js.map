{"version":3,"sources":["../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/warning/warning.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js"],"names":["FormContext","React","FormCheckInput","_ref","ref","id","bsPrefix","className","_ref$type","type","_ref$isValid","isValid","_ref$isInvalid","isInvalid","_ref$as","as","Component","props","_objectWithoutProperties","_excluded","controlId","useContext","useBootstrapPrefix","_jsx","_objectSpread","classNames","displayName","warning","module","exports","propTypes","PropTypes","string","tooltip","bool","elementType","Feedback","_ref$tooltip","concat","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","_ref$inline","inline","_ref$disabled","disabled","_ref$feedbackTooltip","feedbackTooltip","feedback","feedbackType","style","_ref$title","title","label","children","innerFormContext","useMemo","hasLabel","toArray","some","child","hasChildOfType","input","Provider","value","_jsxs","_Fragment","Object","assign","Input","Label","FormControl","classes","_classes2","size","htmlSize","plaintext","readOnly","_defineProperty","createWithBsPrefix","FormGroup","context","Col","_useCol","breakpoints","useBootstrapBreakpoints","spans","forEach","brkPoint","span","offset","order","propValue","infix","push","apply","useCol","_useCol2","_slicedToArray","_useCol2$","colProps","_excluded2","_useCol2$2","_useCol2$2$as","length","FormLabel","column","visuallyHidden","columnClass","defaultProps","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","any","validated","Form","Group","Control","Floating","FormFloating","Check","Text","Range","Select"],"mappings":"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","file":"static/js/0.2c68c548.chunk.js","sourcesContent":["import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\n\n\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\n\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});"],"sourceRoot":""}