{"version":3,"sources":["components/CartGoods/CartGoods.module.css","components/OrderForm/OrderForm.module.css","components/ShoppingCartPage/ShoppingCartPage.module.css","redux/orders/orders-selectors.js","redux/orders/orders-operaions.js","components/CartGoods/CartGoods.js","components/OrderForm/OrderForm.js","components/ShoppingCartPage/ShoppingCartPage.js","views/ShoppingCartView/ShoppingCartView.js"],"names":["module","exports","ordersSelectors","getOrdersError","state","orders","ordersError","getOrdersLoading","ordersLoading","getOrders","getAddOrderErrors","addOrderErrors","getAddOrderLoading","addOrderLoading","getName","name","getEmail","email","getPhone","phone","getAddresss","address","addOrder","order","dispatch","a","addOrderRequest","axios","patch","data","addOrderSuccess","addOrderError","response","message","CartGoods","useDispatch","useState","totalPrice","setTotalPrice","useSelector","cart","cartSelectors","getCart","shop","shopsSelectors","getActualShop","handleChange","target","value","quantity","Number","console","log","removeFromCart","_id","updateCart","useEffect","reduce","total","e","good","price","toFixed","className","styles","CartGoodsList","map","CartGoodsList__Item","Card","border","Img","src","plug","Card__Img","Body","Card__Body","Title","Card__Title","Text","InputGroup","Form","Control","type","onChange","Button","button","onClick","preventDefault","OrderForm","changeName","changeEmail","changePhone","changeAddress","form","onSubmit","Group","controlId","Label","placeholder","ShoppingCartPage","AreasList","AreasList__Item","ShoppingCartView"],"mappings":"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","file":"static/js/ShoppingCartView.8b756de3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CartGoodsList\":\"CartGoods_CartGoodsList__2CTEb\",\"CartGoodsList__Item\":\"CartGoods_CartGoodsList__Item__1XO1_\",\"Card\":\"CartGoods_Card__2vfOB\",\"Card__Img\":\"CartGoods_Card__Img__gUTvL\",\"Card__Body\":\"CartGoods_Card__Body__3V8-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"OrderForm_form__3RPaI\",\"label\":\"OrderForm_label__3bC13\",\"button\":\"OrderForm_button__2ddSD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AreasList\":\"ShoppingCartPage_AreasList__PvlgA\",\"AreasList__Item\":\"ShoppingCartPage_AreasList__Item__180yO\"};","const getOrdersError = state => state.orders.ordersError;\nconst getOrdersLoading = state => state.orders.ordersLoading;\nconst getOrders = state => state.orders.orders;\nconst getAddOrderErrors = state => state.orders.addOrderErrors;\nconst getAddOrderLoading = state => state.orders.addOrderLoading;\nconst getName= state => state.orders.name;\nconst getEmail = state => state.orders.email;\nconst getPhone= state => state.orders.phone;\nconst getAddresss = state => state.orders.address;\n\nconst ordersSelectors = {\n  getOrdersError,\n  getOrdersLoading,\n  getOrders,\n  getAddOrderErrors,\n  getAddOrderLoading,\n  getName,\n  getEmail,\n  getPhone,\n  getAddresss,\n};\nexport default ordersSelectors;\n","import {\n  addOrderRequest,\n  addOrderSuccess,\n  addOrderError,\n  fetchOrdersRequest,\n  fetchOrdersSuccess,\n  fetchOrdersError,\n} from './orders-actions';\nimport axios from 'axios';\n\nexport const addOrder = order => async dispatch => {\n  dispatch(addOrderRequest());\n  try {\n    const { data } = await axios.patch(`/orders`, order);\n    dispatch(addOrderSuccess(data.order));\n  } catch (error) {\n    dispatch(addOrderError(error.response.data.message));\n  }\n};\n\nexport const fetchOrders = () => async dispatch => {\n  dispatch(fetchOrdersRequest());\n  try {\n    const { data } = await axios.get(\n      `/orders`,\n    );\n    dispatch(fetchOrdersSuccess(data.shops));\n  } catch (error) {\n    dispatch(fetchOrdersError(error.response.data.message));\n  }\n};\n","import { Card, Button, Form, InputGroup } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport ordersSelectors from '../../redux/orders/orders-selectors';\r\nimport cartSelectors from '../../redux/cart/cart-selectors';\r\nimport shopsSelectors from '../../redux/shops/shops-selectors';\r\n\r\nimport { removeFromCart, updateCart } from '../../redux/cart/cart-actions';\r\nimport { addOrder, } from '../../redux/orders/orders-operaions';\r\n\r\nimport plug from '../../public/pictures/1.jpg';\r\nimport styles from './CartGoods.module.css';\r\n\r\n\r\nexport default function CartGoods() {\r\n  const dispatch = useDispatch();\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const name = useSelector(ordersSelectors.getName);\r\n  const email = useSelector(ordersSelectors.getEmail);\r\n  const phone = useSelector(ordersSelectors.getPhone);\r\n  const address = useSelector(ordersSelectors.getAddresss);\r\n  const cart = useSelector(cartSelectors.getCart);\r\n  const shop = useSelector(shopsSelectors.getActualShop);\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    const quantity = Number(value)\r\n    console.log(value)\r\n    if (quantity === 0) {\r\n      dispatch(removeFromCart({ _id: name }))\r\n    } else {\r\n      dispatch(updateCart({ _id: name, quantity }))\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTotalPrice(cart.reduce((total, e) => {\r\n      return total + e.quantity * e.good.price;\r\n    }, 0).toFixed(2))\r\n  }, [cart]);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(addOrder({ name, email, phone, address, shop, price: totalPrice, cart }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul className={styles.CartGoodsList}>\r\n        {cart.map(e => (\r\n          <li key={e.good._id} className={styles.CartGoodsList__Item}>\r\n            <Card className={styles.Card} border=\"primary\">\r\n              <Card.Img src={plug} className={styles.Card__Img} />\r\n              <Card.Body className={styles.Card__Body}>\r\n                <Card.Title className={styles.Card__Title}>{e.good.name}</Card.Title>\r\n                <Card.Text>\r\n                  Price: {e.good.price}\r\n                </Card.Text>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    value={e.quantity}\r\n                    name={e.good._id}\r\n                    type=\"number\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </InputGroup>\r\n              </Card.Body>\r\n            </Card>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h3>Total price: {totalPrice}</h3>\r\n      <Button className={styles.button} onClick={handleSubmit}>\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux';\nimport {  Form } from 'react-bootstrap';\nimport ordersSelectors from '../../redux/orders/orders-selectors';\n\nimport { changeName, changeEmail, changePhone, changeAddress} from '../../redux/orders/orders-actions';\nimport styles from './OrderForm.module.css';\n\n\nexport default function OrderForm() {\n  const dispatch = useDispatch();\n\n  const name = useSelector(ordersSelectors.getName);\n  const email = useSelector(ordersSelectors.getEmail);\n  const phone = useSelector(ordersSelectors.getPhone);\n  const address = useSelector(ordersSelectors.getAddresss);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return dispatch(changeName(value));\n      case 'email':\n        return dispatch(changeEmail(value));\n      case 'phone':\n        return dispatch(changePhone(value));\n      case 'address':\n        return dispatch(changeAddress(value));\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // dispatch(addOrder({ name, email, phone, address, shop, price, cart }));\n    // setName('');\n    // setEmail('');\n    // setPhone('');\n    // setAddress('');\n  };\n\n  return (\n    <div>\n      <Form className={styles.form} onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter your name\"\n            value={name}\n            onChange={handleChange}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"phone\">\n          <Form.Label>Phone</Form.Label>\n          <Form.Control\n            type=\"phone\"\n            name=\"phone\"\n            placeholder=\"Enter your phone\"\n            value={phone}\n            onChange={handleChange}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"address\"\n            name=\"address\"\n            placeholder=\"Enter your address\"\n            value={address}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        \n      </Form>\n    </div>\n  );\n}\n","import CartGoods from '../CartGoods/CartGoods';\r\nimport OrderForm from '../OrderForm/OrderForm';\r\n\r\nimport styles from './ShoppingCartPage.module.css';\r\n\r\n\r\nexport default function ShoppingCartPage() {\r\n  return (\r\n    <div>\r\n      <ul className={styles.AreasList}>\r\n        <li className={styles.AreasList__Item}>\r\n        <OrderForm />\r\n        </li>\r\n        <li className={styles.AreasList__Item}>\r\n        <CartGoods />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import ShoppingCartPage from '../../components/ShoppingCartPage/ShoppingCartPage';\r\nexport default function ShoppingCartView() {\r\n  return (\r\n    <>\r\n      <ShoppingCartPage />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}